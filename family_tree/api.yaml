openapi: "3.0.2"
info:
  description: OpenAPI implementation of family tree.
  version: "1.0.0"
  title: "Family Tree"
  contact:
    name: Github
    url: https://github.com/nmichale/be-coding-challenge
servers:
  - url: "/api"


paths:
  /person/add/:
    post:
      tags:
        - "Person"
      summary: "Add people to family tree with JSON objects"
      operationId: "family_tree.api.person_add"
      requestBody:
        description: People to add to family tree.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/people_parents'
      responses:
        200:
          $ref: '#/components/responses/person_ids'
  /person/modify/{attribute}/:
    post:
      tags:
        - "Person"
      summary: "Modify a chosen attribute for the person with the id."
      operationId: "family_tree.api.modify_person"
      parameters:
        - $ref: '#/components/parameters/person_id'
        - $ref: '#/components/parameters/attribute'
        - $ref: '#/components/parameters/value'
      responses:
        200:
          $ref: '#/components/responses/person'
  /person/query/{attribute}/:
    get:
      tags:
        - "Person"
      summary: "Query family tree for anybody with the given attribute value."
      operationId: "family_tree.api.person_get"
      parameters:
        - $ref: '#/components/parameters/attribute'
        - $ref: '#/components/parameters/value'
      responses:
        200:
          $ref: '#/components/responses/people'
  /person/connection/modify/:
    post:
      tags:
        - "Connections"
      summary: Add a parental connection edge
      operationId: "family_tree.api.add_parents"
      parameters:
        - $ref: '#/components/parameters/person_id'
        - $ref: '#/components/parameters/parent_ids'
      responses:
        200:
          $ref: '#/components/responses/parents'
    delete:
      tags:
        - "Connections"
      summary: Remove a parental connection edge
      operationId: "family_tree.api.remove_parents"
      parameters:
        - $ref: '#/components/parameters/person_id'
        - $ref: '#/components/parameters/parent_ids'
      responses:
        200:
          $ref: '#/components/responses/parents'
  /person/connection/children/:
    get:
      tags:
        - "Connections"
      summary: Get all children of a person.
      operationId: "family_tree.api.person_children"
      parameters:
        - $ref: '#/components/parameters/person_id'
      responses:
        200:
          $ref: '#/components/responses/people'
  /person/connection/parents/:
    get:
      tags:
        - "Connections"
      summary: Get all parents of a person.
      operationId: "family_tree.api.person_parents"
      parameters:
        - $ref: '#/components/parameters/person_id'
      responses:
        200:
          $ref: '#/components/responses/people'
  /person/connection/siblings/:
    get:
      tags:
        - "Connections"
      summary: Get all siblings of a person.
      operationId: "family_tree.api.person_siblings"
      parameters:
        - $ref: '#/components/parameters/person_id'
      responses:
        200:
          $ref: '#/components/responses/people'
  /person/connection/grandparents/:
    get:
      tags:
        - "Connections"
      summary: Get all grandparents of a person.
      operationId: "family_tree.api.person_grandparents"
      parameters:
        - $ref: '#/components/parameters/person_id'
      responses:
        200:
          $ref: '#/components/responses/people'
  /person/connection/parent_siblings/:
    get:
      tags:
        - "Connections"
      summary: Get all parent_siblings (aunts and uncles) of a person.
      operationId: "family_tree.api.person_parent_siblings"
      parameters:
        - $ref: '#/components/parameters/person_id'
      responses:
        200:
          $ref: '#/components/responses/people'
  /person/connection/cousins/:
    get:
      tags:
        - "Connections"
      summary: Get all cousins of a person.
      operationId: "family_tree.api.person_cousins"
      parameters:
        - $ref: '#/components/parameters/person_id'
      responses:
        200:
          $ref: '#/components/responses/people'

components:
  parameters:
    person_id:
      description: Id associated with a person (returned when submitting a person).
      name: person_id
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/id'
    value:
      description: Value of an attribute of a person.
      name: value
      in: query
      required: true
      schema:
        type: string
    attribute:
      description: Attribute of a person.
      name: attribute
      in: path
      required: true
      schema:
        type: string
    parent_ids:
      description: Ids of parents.
      name: parent_ids
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/parent_ids'

  responses:
    person_ids:
      description: Array of person ids.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ids'
    person:
      description: JSON object of a person.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/person'
    people:
      description: Array of JSON objects representing people.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/people'
    parents:
      description: Parents of person used.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/people'

  schemas:
    people:
      type: array
      items:
        $ref: '#/components/schemas/person'
    person:
      type: object
      properties:
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        phone_number:
          $ref: '#/components/schemas/phone_number'
        email_address:
          $ref: '#/components/schemas/email_address'
        address:
          $ref: '#/components/schemas/address'
        birth_date:
          $ref: '#/components/schemas/birth_date'
    people_parents:
      type: array
      items:
        $ref: '#/components/schemas/person_parents'
    person_parents:
      type: object
      properties:
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        phone_number:
          $ref: '#/components/schemas/phone_number'
        email_address:
          $ref: '#/components/schemas/email_address'
        address:
          $ref: '#/components/schemas/address'
        birth_date:
          $ref: '#/components/schemas/birth_date'
        parent_ids:
          $ref: '#/components/schemas/parent_ids'
    first_name:
      type: string
    last_name:
      type: string
    phone_number:
      type: string
    email_address:
      type: string
    address:
      type: string
    birth_date:
      type: string
      format: date
    parent_ids:
      type: array
      items:
        $ref: '#/components/schemas/id'
    id:
      type: number
      format: integer
    ids:
      type: array
      items:
        $ref: '#/components/schemas/id'
    response:
      description: Response.
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string